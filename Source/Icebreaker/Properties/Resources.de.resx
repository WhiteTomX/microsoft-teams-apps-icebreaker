<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackButtonText" xml:space="preserve">
    <value>Zurück</value>
    <comment>This is the back button text</comment>
  </data>
  <data name="ChatWithMatchButtonText" xml:space="preserve">
    <value>Chat mit {0}</value>
    <comment>Button text to initiate a chat with the person the user has been matched up with</comment>
  </data>
  <data name="ChatWithMessageGreeting" xml:space="preserve">
    <value>Hallo!
{0}</value>
    <comment>This is the greeting of the chat with matched member message, {0} is a random selected question</comment>
  </data>
  <data name="DefaultQuestion" xml:space="preserve">
    <value>Wie geht es dir?</value>
    <comment>This is the default question, used if none other is available.</comment>
  </data>
  <data name="DoneButtonText" xml:space="preserve">
    <value>Fertig</value>
    <comment>This is the done button text</comment>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>Fehler bei der Verarbeitung der Anforderung. Wiederholen?</value>
    <comment>A generic message that is sent when there is an error occurring</comment>
  </data>
  <data name="InstallMessageKnownInstallerPart1" xml:space="preserve">
    <value>Wenn du dies liest, ist es wahrscheinlich, weil {0} mich zum **{1}-Team** hinzugefügt hat.</value>
    <comment>Install message and also the welcome message when the app installer is known - {0} is the placeholder for the name of the user that has installed the app to the team, and {1} is the placeholder for the name of the team that the app has been installed to</comment>
  </data>
  <data name="InstallMessageKnownInstallerPart2" xml:space="preserve">
    <value>Ich kann dir helfen, Zeichensetzende in dem Verein kennenzulernen, indem ich dich jede Woche zufällig mit jemandem zusammenbringe. Du lernst neue Menschen kennen und erfährst mehr über andere Zeichensetzende. Das ist eine Win-Win-*Win*-Situation.</value>
    <comment>Part 2 of the install message when the name of the installer is known</comment>
  </data>
  <data name="InstallMessageKnownInstallerPart3" xml:space="preserve">
    <value>**Um neue Leute kennenzulernen, bleib einfach dran. Ich werde dir bald eine Einladung senden.**</value>
    <comment>Part 3 of the install message with the name of the installer known</comment>
  </data>
  <data name="InstallMessageUnknownInstallerPart1" xml:space="preserve">
    <value>Wenn du dies liest, ist es, weil ich für das **{0}-Team** installiert wurde. </value>
    <comment>Install message and also the welcome message when the app installer is not known - {0} is the placeholder for the name of the team that the app has been installed to</comment>
  </data>
  <data name="InstallMessageUnknownInstallerPart2" xml:space="preserve">
    <value>Ich kann dir helfen, mehr Zeichensetzende des Vereins kennenzulernen, indem ich dich jede Woche zufällig mit jemandem zusammenbringe. Du lernst neue Menschen kennen und erfährst mehr über andere Zeichensetzende. Das ist eine Win-Win-*Win*-Situation.</value>
    <comment>Part 2 of the install message when the name of the installer is not known</comment>
  </data>
  <data name="InstallMessageUnknownInstallerPart3" xml:space="preserve">
    <value>**Um neue Leute kennenzulernen, bleib einfach dran. Ich werde Ihnen bald eine Einladung senden.**</value>
    <comment>Part 3 of the install message when the name of the installer is not known</comment>
  </data>
  <data name="MatchUpCardContentPart1" xml:space="preserve">
    <value>Hallo nochmal, ich bin {0} in {1}. Ein Bot, der dich jede Woche mit jemandem zusammenbringt. Diese Woche ist {2} dein Match.</value>
    <comment>First part of the match up card main content</comment>
  </data>
  <data name="MatchUpCardContentPart2" xml:space="preserve">
    <value>Wenn du möchtest, kontaktiere die andere Person. Leute zu treffen *ist* einfach!</value>
    <comment>Second part of the match up card main content</comment>
  </data>
  <data name="MatchUpCardMatchedText" xml:space="preserve">
    <value>Du wurdest mit {0} gematcht.</value>
    <comment>The text saying who the user has been matched up with</comment>
  </data>
  <data name="MatchUpCardQuestion" xml:space="preserve">
    <value>Du weißt nicht wie du starten sollst? Frag doch einfach *{0}*</value>
    <comment>The text for a icebreaker. {0} is a randomly selectected question.</comment>
  </data>
  <data name="MatchUpCardTitleContent" xml:space="preserve">
    <value>Es ist Zeit für ein Match!</value>
    <comment>The title text for the pairup notification adaptive card</comment>
  </data>
  <data name="MeetupContent" xml:space="preserve">
    <value>Hallo, anscheinend wurden wir von {0} diese Woche gematcht. Wenn du Zeit hast, würde ich mich gern mit dir auf einen Kaffee treffen oder zum telefonieren.</value>
    <comment>Content of the Meetup for the propose meeting</comment>
  </data>
  <data name="MeetupTitle" xml:space="preserve">
    <value>{0} / {1} Meet Up</value>
    <comment>The title for the Meetup - {0} is the name of the first person that user has been matched with and {1} is the name of the user</comment>
  </data>
  <data name="NextButtonText" xml:space="preserve">
    <value>Weiter</value>
    <comment>This is the next button text</comment>
  </data>
  <data name="OptInConfirmation" xml:space="preserve">
    <value>Willkommen zurück! Ich habe dich vermisst. Du wirst bald wieder gematcht. Viel Spaß!</value>
    <comment>The confirmation reply that is sent when the user resumes the matches</comment>
  </data>
  <data name="OptOutConfirmation" xml:space="preserve">
    <value>Erledigt. Du wirst keine Matches mehr erhalten. Du kannst jederzeit wieder mitmachen!</value>
    <comment>The confirmation reply that is sent when the user pauses all matches</comment>
  </data>
  <data name="PausePairingsButtonText" xml:space="preserve">
    <value>Matches stoppen</value>
    <comment>Button text to pause pairings</comment>
  </data>
  <data name="ProposeMeetupButtonText" xml:space="preserve">
    <value>Termin erstellen</value>
    <comment>Button text to propose the meetup with the match of the user</comment>
  </data>
  <data name="ReportInactiveButtonText" xml:space="preserve">
    <value>Antwortet nicht</value>
    <comment>Button text to report as Inactive</comment>
  </data>
  <data name="ReportInactiveConfirmButtonText" xml:space="preserve">
    <value>Bestätigen</value>
    <comment>Text of Button to confirm inactive report</comment>
  </data>
  <data name="ReportInactiveConfirmedOptOutText" xml:space="preserve">
    <value>Die Person wird nicht mehr gematched.</value>
    <comment>Text to confirm opt out after reporting inactive</comment>
  </data>
  <data name="ReportInactiveConfirmText" xml:space="preserve">
    <value>Jemanden als inaktiv zu melden sorgt dafür, dass die Person nicht mehr mit anderen gematcht wird. Sie wird darüber informiert und kann es selbst wieder aktivieren.</value>
    <comment>Confirmation Text to report someone as inactive</comment>
  </data>
  <data name="ResumePairingsButtonText" xml:space="preserve">
    <value>Matches wieder aktivieren</value>
    <comment>Button text to resume pairings</comment>
  </data>
  <data name="SalutationTitleText" xml:space="preserve">
    <value>Hallo!</value>
    <comment>This is the text for the salutation in the adaptive cards when the bot is installed to a team and also when new users are added to the team</comment>
  </data>
  <data name="TakeATourButtonText" xml:space="preserve">
    <value>Einen Rundgang machen</value>
    <comment>The text for the button which launches a tour when clicked</comment>
  </data>
  <data name="TourContentPageTitleText" xml:space="preserve">
    <value>Tour</value>
    <comment>This is the tour content page title text</comment>
  </data>
  <data name="TourMatchesBodyText" xml:space="preserve">
    <value>Pausiere Matches, wann immer du willst. Aktuell zu viel zu tun? Kein Problem! Klick einfach auf die Schaltfläche, wann immer du willst.</value>
    <comment>This is the tour match task module body text</comment>
  </data>
  <data name="TourMatchesHeaderText" xml:space="preserve">
    <value>Matches einfach ausschalten</value>
    <comment>This is the tour match task module header text</comment>
  </data>
  <data name="TourWelcomeBodyText" xml:space="preserve">
    <value>Jede Woche werde ich dich mit einer neuen Person zusammenbringen. Wenn du in dieser Woche Lust hast, könnt ihr euch treffen - zum Mittagessen oder zum Telefonieren, wenn ihr an verschiedenen Orten seid. Achte auf eine weitere Nachricht, in der ich dich mit der ersten Person zusammenbringe.</value>
    <comment>This is the tour welcome body text</comment>
  </data>
  <data name="TourWelcomeHeaderText" xml:space="preserve">
    <value>Neue Zeichensetzende treffen und eine Community mit Ihnen aufbauen</value>
    <comment>This is the tour welcome header text</comment>
  </data>
  <data name="TourWelcomeImageAltText" xml:space="preserve">
    <value>Begrüßungsbild</value>
    <comment>This is the tour welcome image alt text</comment>
  </data>
  <data name="UnrecognizedInput" xml:space="preserve">
    <value>Ich kann die eingehende Nachricht leider nicht verarbeiten. Du kannst jedoch eine Tour machen, um mehr über meine Funktionalität zu erfahren.</value>
    <comment>The text for the unrecognized input scenario</comment>
  </data>
  <data name="WelcomeTourTitle" xml:space="preserve">
    <value>Tour</value>
    <comment>This is the title of the tour for the Icebreaker Bot</comment>
  </data>
</root>